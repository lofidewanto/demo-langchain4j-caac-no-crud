logging.level.dev.langchain4j=DEBUG
logging.level.dev.ai4j.openai4j=DEBUG

# Database standard value: jdbc:h2:mem:testdb
spring.h2.console.enabled=true

# Standard values for H2 database
# spring.datasource.url=jdbc:h2:mem:testdb "Random from 2.3.x"
# spring.datasource.driverClassName=org.h2.Driver
# spring.datasource.username=sa
# spring.datasource.password=
# spring.jpa.database-platform=org.hibernate.dialect.H2Dialect

spring.datasource.url=jdbc:h2:mem:testdb

spring.jpa.hibernate.ddl-auto=validate

logging.level.org.springframework.transaction.interceptor=TRACE
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

spring.jpa.properties.javax.persistence.schema-generation.scripts.action=create
spring.jpa.properties.javax.persistence.schema-generation.scripts.create-target=target/create.sql
spring.jpa.properties.javax.persistence.schema-generation.scripts.create-source=metadata

# Standard values for Flyway
# spring.flyway.locations=classpath:db/migration
# spring.flyway.url=jdbc:postgresql://localhost:5432/testdb
# spring.flyway.user=postgres
# spring.flyway.password=admin

spring.flyway.enabled=true

# Langchain4j configuration
#langchain4j.llm.provider=ollama
#langchain4j.ollama.chat-model.base-url=http://localhost:11434
#langchain4j.ollama.chat-model.model-name=MFDoom/deepseek-r1-tool-calling
#langchain4j.memory.provider=ollama
#langchain4j.memory.type=in-memory

# LangChain4j properties for OpenAI
#langchain4j.open-ai.streaming-chat-model.api-key=${OPENAI_API_KEY}
#langchain4j.open-ai.streaming-chat-model.model-name=gpt-4-turbo
#langchain4j.open-ai.streaming-chat-model.temperature=0
#langchain4j.open-ai.embedding-model.api-key=${OPENAI_API_KEY}
#langchain4j.open-ai.streaming-chat-model.strict-tools=true

# Logging properties
#langchain4j.open-ai.streaming-chat-model.log-requests=true
#langchain4j.open-ai.streaming-chat-model.log-responses=false

spring-boot.run.jvmArguments=-Xmx4g -Xms2g